# A sample workflow which sets up Snyk to analyze the full Snyk platform (Snyk Open Source, Snyk Code,
# Snyk Container and Snyk Infrastructure as Code)
# The setup installs the Snyk CLI - for more details on the possible commands
# check https://docs.snyk.io/snyk-cli/cli-reference
# The results of Snyk Code are then uploaded to GitHub Security Code Scanning
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Security

on: [push, pull_request]

# permissions:
#   contents: read

jobs:
  snyk:
#     permissions:
#       contents: read # for actions/checkout to fetch code
#       security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: snyk-setup
        uses: snyk/actions/setup@0.4.0

      - name: dotnet-setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
          
      - name: snyk-auth
        run: snyk auth ${{secrets.SNYK_TOKEN}}

        # Runs Snyk Code (SAST) analysis and uploads result into GitHub
        # Use || true to not fail the pipeline
      - name: snyk-code-test
        run: snyk code test --sarif > snyk-code.sarif || true

        # Runs Snyk Open Source (SCA) analysis and uploads result to Snyk
        # probably fails due to DIrectory.Build.props not bein supported by snyk atm
      - name: snyk-monitor
        run: snyk monitor --all-projects || true

      - name: upload-security-report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk-code.sarif
