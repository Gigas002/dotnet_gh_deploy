name: deploy-packages
on:   
  workflow_dispatch:
    inputs:
      runs-on:
        description: 'The operating system to run the job on'
        required: true
        type: choice
        options:
          - ubuntu-latest
          - windows-latest
          - macos-latest
      publish-base:
        description: 'Base path to publish artifact'
        required: false
        default: 'publish'
        type: string
      gh-nuget-source:
        description: 'Source to publish nuget package on github feed'
        required: false
        default: senketsu03
        type: string
  workflow_call:
    inputs:
      runs-on:
        description: 'The operating system to run the job on'
        required: true
        type: string
      publish-base:
        description: 'Base path to publish artifact'
        required: false
        default: 'publish'
        type: string
      gh-nuget-source:
        description: 'Source to publish nuget package on github feed'
        required: true
        type: string
 
jobs:

  deploy:
    runs-on: ${{inputs.runs-on}}
    defaults:
      run:
        shell: pwsh
    env:
      prerelease: true
    strategy:
      matrix:
        package: ["Deploy.Core/Deploy.Core.csproj"]
    steps:
      - uses: actions/checkout@v3
        
      - name: read-version
        id: read-version
        uses: ./.github/actions/read-version
        
      - name: dotnet-setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
        
      - name: dotnet-build
        run: dotnet build -c Release
        
      - name: dotnet-pack
        run: |
          if ("${{steps.read-version.outputs.suffix}}")
          {
              Write-Output "Pack prerelease (build): ${{steps.read-version.outputs.build}}"
              dotnet pack "${{matrix.package}}" -c Release -o "${{inputs.publish-base}}/nupkg" --no-build --version-suffix ci-${{steps.read-version.outputs.build}}
          }
          else
          {
              Write-Output "Pack release: ${{steps.read-version.outputs.prefix}}"
              dotnet pack "${{matrix.package}}" -c Release -o "${{inputs.publish-base}}/nupkg" --no-build
          }
          
      - name: push-nuget-nupkg
        run: |
          foreach($file in (Get-ChildItem '${{inputs.publish-base}}/' -Recurse -Include *.nupkg))
          {
              dotnet nuget push $file -k ${{secrets.NUGET_API_KEY}} -s https://api.nuget.org/v3/index.json --skip-duplicate
          }
          
      - name: push-github-nupkg
        run: |
          foreach($file in (Get-ChildItem '${{inputs.publish-base}}/' -Recurse -Include *.nupkg))
          {
              dotnet nuget push $file -k ${{secrets.GITHUB_TOKEN}} -s 'https://nuget.pkg.github.com/${{inputs.gh-nuget-source}}/index.json' --skip-duplicate
          }
          
        
