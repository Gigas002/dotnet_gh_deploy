name: build-test-deploy

on: [push, pull_request]

jobs:

# building and testing tasks

  build-test-windows:
    uses: ./.github/workflows/reusable-build-test.yml
    with:
      runs-on: windows-latest
  build-test-linux:
    uses: ./.github/workflows/reusable-build-test.yml
    with:
      runs-on: ubuntu-latest
  build-test-macos:
    uses: ./.github/workflows/reusable-build-test.yml
    with:
      runs-on: macos-latest
      
# publishing tasks
      
  publish-windows-cli:
    needs: build-test-windows
    uses: ./.github/workflows/reusable-cli-deploy.yml
    with:
      runs-on: windows-latest
      rid: "win-x64"
  publish-linux-cli:
    needs: build-test-linux
    uses: ./.github/workflows/reusable-cli-deploy.yml
    with:
      runs-on: ubuntu-latest
      rid: "linux-x64"
  publish-macos-cli:
    needs: build-test-macos
    uses: ./.github/workflows/reusable-cli-deploy.yml
    with:
      runs-on: macos-latest
      rid: "osx-x64"

# experimental

#   read-version:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: pwsh
#     steps:
#       - uses: actions/checkout@v3
#       - name: Read Version
#         id: version
#         run: |
#           $Path = "Directory.Build.props"
#           $XPath = "/Project/PropertyGroup/VersionSuffix"
#           $versionSuffix = (Select-Xml -Path $Path -XPath $Xpath).Node.InnerText
#           echo "suffix=$versionSuffix" >> $env:GITHUB_OUTPUT
#           $XPath = "/Project/PropertyGroup/VersionPrefix"
#           $versionPrefix = (Select-Xml -Path $Path -XPath $Xpath).Node.InnerText
#           echo "prefix=$versionPrefix" >> $env:GITHUB_OUTPUT
#       - name: Print Version
#         run: |
#           echo "The suffix is ${{ steps.version.outputs.suffix }}"
#           echo "The prefix is ${{ steps.version.outputs.prefix }}"

  read-version:
    runs-on: ubuntu-latest
    outputs:
      suffix: ${{ steps.version.outputs.suffix }}
      prefix: ${{ steps.version.outputs.prefix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Read Version
        id: version
        run: |
          $Path = "Directory.Build.props"
          $XPath = "/Project/PropertyGroup/VersionSuffix"
          $versionSuffix = (Select-Xml -Path $Path -XPath $Xpath).Node.InnerText
          echo "suffix=$versionSuffix" >> $env:GITHUB_OUTPUT
          $XPath = "/Project/PropertyGroup/VersionPrefix"
          $versionPrefix = (Select-Xml -Path $Path -XPath $Xpath).Node.InnerText
          echo "prefix=$versionPrefix" >> $env:GITHUB_OUTPUT

  deploy-release:
    needs: read-version
    if: needs.read-version.outputs.suffix == ''
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Release
        run: echo "Deploying release version ${{ needs.read-version.outputs.prefix }}"

  deploy-continious:
    needs: read-version
    if: needs.read-version.outputs.suffix != ''
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Continious
        run: echo "Deploying continious version ${{ needs.read-version.outputs.prefix }}-${{ needs.read-version.outputs.suffix }}"



